name: CI

on:
  push:
    branches: [main, master]
  pull_request:

jobs:
  repo-audit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'npm' }
      - run: npm ci || npm i
      # Assemble large assets BEFORE audit so auditor sees required SVGs
      - name: Assemble large assets (optional)
        run: node scripts/assemble-assets.ts || true
      - name: Repo auditor
        run: node scripts/repo-audit.mjs
  packages:
    needs: repo-audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: 20, cache: 'npm' }
      # schemas
      - name: packages/schemas — install & typecheck
        working-directory: packages/schemas
        run: |
          npm ci || npm i
          npm run -s typecheck || true
          npm run -s lint --if-present
          npm run -s test --if-present
      # db
      - name: packages/db — install & typecheck
        working-directory: packages/db
        run: |
          npm ci || npm i
          npm run -s typecheck || true
          npm run -s lint --if-present
          npm run -s test --if-present
  functions:
    needs: repo-audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: denoland/setup-deno@v1
        with:
          deno-version: v1.x
      - name: Check format
        run: deno fmt --check functions/**/*.ts || true
      - name: Type check
        run: deno check functions/**/*.ts || true
      - name: Unit tests (if present)
        working-directory: functions
        run: deno test || true
  web:
    needs: repo-audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/web
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: apps/web/package-lock.json
      - run: npm ci || npm i
      - run: npm run lint --if-present
      - run: npm test --if-present
      - run: npm run build --if-present
      - run: npm run e2e --if-present
        if: ${{ hashFiles('apps/web/playwright.config.ts') != '' }}
  mobile:
    needs: repo-audit
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: apps/mobile
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: apps/mobile/package-lock.json
      # Pre-align is advisory (non-blocking) to help pin native deps in CI
      - name: Pre-align Expo deps (non-blocking)
        run: node scripts/expo-dep-guard.mjs --ci || true
      - run: npm ci || npm i
      # Run the real align step (must pass)
      - run: npm run align
      - run: npm test --if-present
      - run: npm run lint --if-present
      # Do not assume a "build" script exists for Expo; keep it optional
      - run: npm run build --if-present
